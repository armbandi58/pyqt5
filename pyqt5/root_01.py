# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mw_01.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import serial
import time
import sys
import serial.tools.list_ports

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1011, 795)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.base_state_button = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.pushed())
        self.base_state_button.setGeometry(QtCore.QRect(570, 560, 131, 51))
        self.base_state_button.setObjectName("base_state_button")
        self.test_button = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.get_DATA())
        self.test_button.setGeometry(QtCore.QRect(800, 540, 131, 51))
        self.test_button.setObjectName("test_button")
        self.connect_button = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.connect_to_com() )
        self.connect_button.setGeometry(QtCore.QRect(100, 560, 271, 101))
        self.connect_button.setObjectName("connect_button")
        self.ledblink_radiobutton = QtWidgets.QRadioButton(self.centralwidget)
        self.ledblink_radiobutton.setGeometry(QtCore.QRect(680, 130, 151, 61))
        self.ledblink_radiobutton.setObjectName("ledblink_radiobutton")
        self.terminal_window = QtWidgets.QTextBrowser(self.centralwidget)
        self.terminal_window.setGeometry(QtCore.QRect(20, 20, 561, 491))
        self.terminal_window.setObjectName("terminal_window")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1011, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.base_state_button.setText(_translate("MainWindow", "Alaphelyzet"))
        self.test_button.setText(_translate("MainWindow", "Tesztuzem"))
        self.connect_button.setText(_translate("MainWindow", "Connect"))
        self.ledblink_radiobutton.setText(_translate("MainWindow", "LED blink"))

    def pushed(self):
        self.terminal_window.append("Ez mar az")
        #self.terminal_window.setText("")

    def beg(self):
        self.terminal_window.append("Mehetne")

    def connect_to_com(self):
        getPort()
        found_Ports = getPort()
        connectPort = findPort(found_Ports)
        if connectPort != 'None':
            self.terminal_window.append("Siker")
            var_serial = serial.Serial(connectPort, baudrate=9600, timeout=1000)
                #flag_while = True
        else:
            self.terminal_window.append("Nem siker")

    def get_DATA(self):
        var_serial = serial.Serial(connectPort, baudrate=9600, timeout=1000)
        self.terminal_window.append(var_serial.readline(1000).decode('utf'))
#var_serial = serial.Serial('COM10', baudrate=9600)#,timeout=1)

i = 1

"""
def Read_Serial():
    global  var_serial
    #var_serial.write()
    asd = var_serial.readline(1000).decode('utf')
    return  asd
"""
def getPort():
    ports = serial.tools.list_ports.comports()
    return ports

def findPort(portsFound):
    comPort = 'None'
    nbr_of_Connection = len(portsFound)
    global found_Ports

    for i in range (0,nbr_of_Connection):
        port = found_Ports[i]
        strPort = str(port)
        if 'STM' in strPort:
            splitPort = strPort.split(' ')
            comPort = (splitPort[0])
    return comPort
"""
found_Ports = getPort()
connectPort = findPort(found_Ports)

if connectPort != 'None':
    print("[+] Kapcsolat el")
    var_serial = serial.Serial(connectPort, baudrate=9600, timeout=1000)
    flag_while = True
else:
    print("[+] Error, nem sikerult a kapcsolat")
"""

found_Ports = getPort()
connectPort = findPort(found_Ports)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())


    #terminal_window.append("Na mehet")

